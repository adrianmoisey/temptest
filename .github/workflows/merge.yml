name: Merge PR Cron (GH CLI)

# Set the schedule to run at a specific time.
# This example runs every day at 12:00 UTC.
# For more cron schedule options, see https://crontab.guru/.
on:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch:


# Grant the workflow permissions to interact with pull requests.
permissions:
  pull-requests: write
  contents: write

jobs:
  merge_pull_requests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install the `gh` CLI on the runner, although it's often pre-installed.
      - name: Set up GH CLI
        uses: actions/setup-gh-cli@v2

      # Fetch and merge PRs using the `gh` CLI and `jq` for JSON parsing.
      # The GITHUB_TOKEN is automatically available to `gh` for authentication.
      - name: Fetch and merge PRs
        run: |
          # The `gh pr list` command with `--json` outputs a JSON array.
          # We use `jq` to parse this and extract the pull request numbers.
          gh pr list --state open --search "in:title adrian" --json number | jq '.[].number' | while read pr_number; do
            echo "Attempting to merge PR #${pr_number}..."
            # The `gh pr merge` command will only merge a PR if it is mergeable.
            # It will exit with a non-zero status and print a message if the PR
            # cannot be merged, which is what the `|| true` is for, so the workflow
            # doesn't fail on a single un-mergeable PR.
            gh pr merge "${pr_number}" --merge --delete-branch || true
          done
